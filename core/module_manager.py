from modules.base_module import BaseModule
import importlib
import os
from PyQt5.QtWidgets import QAction
from PyQt5.QtCore import Qt

class ModuleManager:
    def __init__(self):
        self.modules = {}
        self.load_modules()
    
    def load_modules(self):
        modules_dir = "modules"
        print(f"‚è≥ –ü–æ—á–∞—Ç–æ–∫ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–æ–¥—É–ª—ñ–≤ –∑ –ø–∞–ø–∫–∏ '{modules_dir}'...")
        
        for item in os.listdir(modules_dir):
            module_path = os.path.join(modules_dir, item)
            
            # –Ü–≥–Ω–æ—Ä—É—î–º–æ –Ω–µ–ø–∞–ø–∫–∏ —Ç–∞ —Å–ª—É–∂–±–æ–≤—ñ –ø–∞–ø–∫–∏
            if not os.path.isdir(module_path) or item in ["__pycache__", "base_module"]:
                continue
                
            # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å __init__.py
            if not os.path.exists(os.path.join(module_path, "__init__.py")):
                print(f"‚ö†Ô∏è –£–≤–∞–≥–∞: –ü–∞–ø–∫–∞ '{item}' –Ω–µ –º—ñ—Å—Ç–∏—Ç—å __init__.py - —ñ–≥–Ω–æ—Ä—É—î—Ç—å—Å—è")
                continue
                
            print(f"üîç –û–±—Ä–æ–±–∫–∞ –º–æ–¥—É–ª—è: {item}")
            try:
                self._load_standard_module(item)
            except Exception as e:
                print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–æ–¥—É–ª—è {item}: {str(e)}")
    
    def _load_standard_module(self, module_name):
        """–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –º–æ–¥—É–ª—è"""
        try:
            module = importlib.import_module(f"modules.{module_name}")
            
            if not hasattr(module, "register_module"):
                print(f"‚ö†Ô∏è –ú–æ–¥—É–ª—å {module_name} –Ω–µ –º–∞—î —Ñ—É–Ω–∫—Ü—ñ—ó register_module()")
                return
                
            instance = module.register_module()
            
            if not isinstance(instance, BaseModule):
                print(f"‚ö†Ô∏è –ú–æ–¥—É–ª—å {module_name} –Ω–µ —É—Å–ø–∞–¥–∫–æ–≤—É—î BaseModule")
                return
                
            self.modules[instance.name] = instance
            print(f"‚úÖ –ú–æ–¥—É–ª—å '{instance.name}' —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ!")
            
        except ImportError as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —ñ–º–ø–æ—Ä—Ç—É –º–æ–¥—É–ª—è {module_name}: {str(e)}")
        except Exception as e:
            print(f"‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –≤ –º–æ–¥—É–ª—ñ {module_name}: {str(e)}")
    
    def get_module(self, name):
        return self.modules.get(name)
    
    def get_all_modules(self):
        return list(self.modules.values())